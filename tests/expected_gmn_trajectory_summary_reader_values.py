"""
This module stores constant expected properties for testing
test_data/test_short_traj_summary.txt
"""
import numpy as np
import pandas as pd  # type: ignore
from numpy import dtype

from gmn_python_api import gmn_trajectory_summary_reader as gtsr

EXPECTED_COLUMN_NAMES = [
    "Beginning (Julian date)",
    "Beginning (UTC Time)",
    "IAU (No)",
    "IAU (code)",
    "Sol lon (deg)",
    "App LST (deg)",
    "RAgeo (deg)",
    "+/- (sigma)",
    "DECgeo (deg)",
    "+/- (sigma.1)",
    "LAMgeo (deg)",
    "+/- (sigma.2)",
    "BETgeo (deg)",
    "+/- (sigma.3)",
    "Vgeo (km/s)",
    "+/- (sigma.4)",
    "LAMhel (deg)",
    "+/- (sigma.5)",
    "BEThel (deg)",
    "+/- (sigma.6)",
    "Vhel (km/s)",
    "+/- (sigma.7)",
    "a (AU)",
    "+/- (sigma.8)",
    "e",
    "+/- (sigma.9)",
    "i (deg)",
    "+/- (sigma.10)",
    "peri (deg)",
    "+/- (sigma.11)",
    "node (deg)",
    "+/- (sigma.12)",
    "Pi (deg)",
    "+/- (sigma.13)",
    "b (deg)",
    "+/- (sigma.14)",
    "q (AU)",
    "+/- (sigma.15)",
    "f (deg)",
    "+/- (sigma.16)",
    "M (deg)",
    "+/- (sigma.17)",
    "Q (AU)",
    "+/- (sigma.18)",
    "n (deg/day)",
    "+/- (sigma.19)",
    "T (years)",
    "+/- (sigma.20)",
    "TisserandJ",
    "+/- (sigma.21)",
    "RAapp (deg)",
    "+/- (sigma.22)",
    "DECapp (deg)",
    "+/- (sigma.23)",
    "Azim +E (of N deg)",
    "+/- (sigma.24)",
    "Elev (deg)",
    "+/- (sigma.25)",
    "Vinit (km/s)",
    "+/- (sigma.26)",
    "Vavg (km/s)",
    "+/- (sigma.27)",
    "LatBeg (+N deg)",
    "+/- (sigma.28)",
    "LonBeg (+E deg)",
    "+/- (sigma.29)",
    "HtBeg (km)",
    "+/- (sigma.30)",
    "LatEnd (+N deg)",
    "+/- (sigma.31)",
    "LonEnd (+E deg)",
    "+/- (sigma.32)",
    "HtEnd (km)",
    "+/- (sigma.33)",
    "Duration (sec)",
    "Peak (AbsMag)",
    "Peak Ht (km)",
    "F (param)",
    "Mass kg (tau=0.7%)",
    "Qc (deg)",
    "MedianFitErr (arcsec)",
    "Beg in (FOV)",
    "End in (FOV)",
    "Num (stat)",
    "Participating (stations)",
]
EXPECTED_DTYPES = [
    dtype("float64"),
    dtype("<M8[ns]"),
    dtype("int64"),
    pd.StringDtype(),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("float64"),
    dtype("bool"),
    dtype("bool"),
    dtype("int64"),
    pd.StringDtype(),
]
EXPECTED_MIN_VALUES = [
    2458462.546488289,
    pd.to_datetime("2018-12-10 01:06:56.588151", format=gtsr.DATETIME_FORMAT),
    -1,
    "ORN",
    257.653525,
    12.964395,
    61.06752,
    0.4428,
    24.89956,
    0.0954,
    4.47378,
    0.2886,
    1.47003,
    0.2832,
    18.18262,
    0.1912,
    15.44892,
    0.1592,
    1.05499,
    0.0723,
    36.10076,
    0.198,
    1.780511,
    0.156,
    0.733371,
    0.013,
    1.502819,
    0.0763,
    187.272169,
    0.2239,
    257.617508,
    0.0,
    84.921195,
    0.2239,
    -8.406152,
    np.float64(np.nan),
    0.395695,
    0.0003,
    248.445187,
    0.2239,
    341.541001,
    0.0429,
    3.165327,
    0.307,
    0.043951,
    0.0086,
    2.375842,
    0.3335,
    1.743775,
    0.0917,
    58.78757,
    0.3105,
    26.61613,
    0.0885,
    66.87396,
    0.1687,
    13.65281,
    0.2865,
    21.21855,
    0.1638,
    19.93673,
    0.1105,
    34.977019,
    0.0001,
    -106.383661,
    0.0003,
    94.9099,
    0.08,
    34.882293,
    0.0001,
    -106.451015,
    0.0003,
    73.9398,
    0.09,
    0.6,
    0.05,
    78.0939,
    0.546,
    3.19e-05,
    15.75,
    71.35,
    True,
    True,
    2,
    "US0002,US0008",
]
EXPECTED_MAX_VALUES = [
    2458462.612651556,
    pd.to_datetime("2018-12-10 02:42:13.094461", format=gtsr.DATETIME_FORMAT),
    256,
    "ORN",
    257.720774,
    353.489921,
    321.76912,
    0.7503,
    57.70221,
    0.5478,
    88.53942,
    0.673,
    65.10204,
    0.5898,
    25.94326,
    0.4606,
    351.35925,
    0.4264,
    23.65155,
    0.3976,
    41.10903,
    0.4599,
    7.95221,
    1.9773,
    0.876616,
    0.0211,
    23.695753,
    0.4746,
    291.599999,
    1.4272,
    257.710131,
    0.0052,
    189.217506,
    1.4222,
    -1.397264,
    np.float64(np.nan),
    0.981174,
    0.0052,
    352.730633,
    1.4222,
    359.769439,
    1.9171,
    14.923247,
    3.9549,
    0.414847,
    0.0399,
    22.424998,
    9.6965,
    3.657959,
    0.1918,
    326.6788,
    0.6409,
    56.69583,
    0.4824,
    331.90954,
    0.7581,
    63.46953,
    0.5887,
    28.56428,
    0.3904,
    28.3612,
    0.3155,
    35.60718,
    0.0005,
    -105.899801,
    0.0018,
    98.0691,
    0.19,
    35.589245,
    0.0005,
    -106.164293,
    0.0013,
    90.2032,
    0.18,
    1.29,
    2.16,
    92.6475,
    0.828,
    0.000701,
    30.01,
    95.3,
    True,
    True,
    2,
    "US0007,US0008",
]
